/*
 * iic.h
 *
 *  Created on: 2017年5月16日
 *      Author: jinzhifeng
 *      https://github.com/jinzhifeng
 */

#ifndef IIC_H_
#define IIC_H_

#include "stm32f7xx_hal.h"

#define IIC_DEVICE_WRITE_ADDRESS 	0x7E
#define IIC_DEVICE_READ_ADDRESS		0x7F

/* FD650 PORT Define */
#define IIC_SDA_Set() 		HAL_GPIO_WritePin(Lcd1602_sda_GPIO_Port, Lcd1602_sda_Pin, GPIO_PIN_SET)	   //lcd1602_pcf8574-SDA端口分配
#define IIC_SDA_Clr() 		HAL_GPIO_WritePin(Lcd1602_sda_GPIO_Port, Lcd1602_sda_Pin, GPIO_PIN_RESET)   //lcd1602_pcf8574-SDA端口分配
#define IIC_ReadSdaPin()	HAL_GPIO_ReadPin(Lcd1602_sda_GPIO_Port, Lcd1602_sda_Pin)					   //lcd1602_pcf8574-SDA端口分配

#define IIC_SCL_Set() 		HAL_GPIO_WritePin(Lcd1602_scl_GPIO_Port, Lcd1602_scl_Pin, GPIO_PIN_SET)	   //lcd1602_pcf8574-SCL端口分配
#define IIC_SCL_Clr() 		HAL_GPIO_WritePin(Lcd1602_scl_GPIO_Port, Lcd1602_scl_Pin, GPIO_PIN_RESET)   //lcd1602_pcf8574-SCL端口分配

/*Simple code WRITE mode:
 <S> <slave address + write> <ACK> <data out> <ACK> <data out> <ACK> ...
 <data out> <ACK> <P>
 Remark: Bold type = generated by slave device.

 Simple code for Read mode:
 <S> <slave address + read> <ACK> <data in> <ACK> ... <data in> <ACK> <data in>
 <NACK> <P>
 Remark: Bold type = generated by slave device.
 */

typedef enum
{
	IIC_ACK = 0,
	IIC_NACK = !IIC_ACK,
} IIC_ACK_Typedef;

#define IIC_Delay()  		IIC_DelayXus(1); //HAL_Delay(1);

void IIC_Start(void);
void IIC_Stop(void);
uint8_t IIC_ReadOneByte(void);
IIC_ACK_Typedef IIC_WriteOneByte(uint8_t WriteOneByte);
void IIC_SdaOutPutMode(void);
void IIC_SdaInPutMode(void);
volatile void IIC_DelayXus(uint32_t DelayXus);


#endif /* IIC_H_ */
